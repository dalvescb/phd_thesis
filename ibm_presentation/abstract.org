#+TITLE: Stochastic Optimization for Instruction Scheduling and Its Potential for Architecture Analysis
#+AUTHOR: Curtis D'Alves / Dr. Christopher Anand / Dr. Wolfram Kahl
#+EMAIL: dalvescb@mcmaster.ca

* Abstract

In compiler optimization, Instruction Scheduling seeks to optimize the order of
a sequence of instructions to maximize throughput while preserving semantics. As
modern architectures become increasing more complex, with supported
techniques/features such as super-scalar, out of order execution, register
remapping, VLIW (Very Large Instruction Word) and more; opportunities to exploit
Instruction Level Parallelism increase in turn. However as a known NP-Complete
problem, finding the optimal schedule for a non-trivial program is too costly.
Conventional compilers opt to utilize heuristics, many of which are developed on
an ad-hoc basis.

We present a stochastic non-linear programming algorithm, capable of spanning
all valid schedules by relaxing the problem to a continuous domain and optimizing
with constraints. We combine the optimization problem with heuristics by
encoding them as penalty functions that can be scaled to adjust priority. By
stochastic-ally generating scaling parameters, we can generate datasets that
have been optimizing with varying emphasis on heuristics. So
far, we have used this method to effectively find schedules for performance
critical code on IBM MASS libraries, gaining up to 20% speedup compared to
previously scheduled code. Although unsuitable to be implemented in a
conventional compiler, we believe the method may prove useful for architecture
analysis. By analyzing generated datasets together with the space of the model
for a given architecture, we hope to gain insights into how different heuristics
impact different architectures. 
